/*
 * change mainClass
 * gradle build
 * java -jar build/libs/ComposeTools.jar
 */

buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java' 
apply plugin: 'eclipse' 
apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

repositories {
	mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

springBoot {
	mainClassName = "orcha.lang.OrchaSpringIntegrationLauncher"
}

jar {
	baseName = 'Orcha'
	version =  'alpha-1.1'
	// exclude ('source/**', 'configuration/**', 'service/**')
	manifest {
		attributes 'Main-Class' : 'orcha.lang.OrchaSpringIntegrationLauncher'
	}
}

dependencies {

	compile 'org.codehaus.groovy:groovy-all:2.4.5'
	
	compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
	
	//compile('org.springframework.boot:spring-boot-starter')
	
	compile("org.springframework.boot:spring-boot-starter-web:2.0.3.RELEASE")
	
	compile("org.springframework.boot:spring-boot-devtools:2.0.3.RELEASE")
	
	// for auto completion in the properties files
	compile("org.springframework.boot:spring-boot-configuration-processor:2.0.3.RELEASE")
	
	
	/*// https://mvnrepository.com/artifact/org.mockito/mockito-core
	testCompile group: 'org.mockito', name: 'mockito-core', version: '2.8.47'
	// https://mvnrepository.com/artifact/junit/junit
	testCompile group: 'junit', name: 'junit', version: '4.12'*/
	
	
	testCompile('org.springframework.boot:spring-boot-starter-test:2.0.3.RELEASE')
	
	compile("org.springframework:spring-tx")
	
	//compile group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta2'
	//compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.0'
	
	
	/*compile('org.apache.logging.log4j:log4j-core:2.11.0')
	compile('org.apache.logging.log4j:log4j-slf4j-impl:2.11.0')
	compile('org.apache.logging.log4j:log4j-api:2.11.0')*/
	
	
	//compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
	//compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
	//compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: '2.11.0'
	
	// Redis
	compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.5.0'
	compile group: 'redis.clients', name: 'jedis', version: '2.9.0'
	
	
	compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.4.0.Final'
	
	compile group: 'com.sun.codemodel', name: 'codemodel', version: '2.6'
	
	compile 'org.springframework.integration:spring-integration-file:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-stream:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-amqp:5.0.6.RELEASE'
	/*compile 'org.springframework.integration:spring-integration-core:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-mail:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-file:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-stream:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-http:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-jdbc:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-event:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-scripting:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-amqp:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-mongodb:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-redis:5.0.6.RELEASE'*/
	//compile 'org.springframework.data:spring-data-redis:2.0.5.RELEASE'
	
	compile 'org.springframework.cloud:spring-cloud-starter-stream-rabbit:2.0.1.RELEASE'
	
	//compile 'org.springframework.cloud:spring-cloud-starter-stream-kafka:2.0.1.RELEASE'
	
	compile group: 'org.jdom', name: 'jdom2', version: '2.0.6'
	compile group: 'jaxen', name: 'jaxen', version: '1.1.6'
	
	compile group: 'org.ow2.asm', name: 'asm', version: '5.2'
	
	compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.4.1'
	
	//compile 'org.springframework.amqp:spring-rabbit:1.5.3.RELEASE'
	
	compile 'org.springframework.batch:spring-batch-core:3.0.7.RELEASE'
	
	compile 'com.h2database:h2:1.3.175'
	
	compile group: 'aspectj', name: 'aspectjweaver', version: '1.5.4'
	
	compile 'javax.mail:javax.mail-api:1.5.5'
	compile 'com.sun.mail:javax.mail:1.5.5'
	
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-stream
	compile group: 'org.springframework.cloud', name: 'spring-cloud-stream', version: '2.0.1.RELEASE'
	testCompile group: 'org.springframework.cloud', name: 'spring-cloud-stream-test-support', version: '2.0.1.RELEASE'
	
	// https://mvnrepository.com/artifact/io.projectreactor/reactor-core
	compile group: 'io.projectreactor', name: 'reactor-core', version: '3.1.8.RELEASE'
	
}

	
compileJava.dependsOn(processResources)		// for auto completion in the properties files

/*configurations.all {
	exclude group: "ch.qos.logback", module: "logback-classic"
}*/

sourceSets {
	main {
		java {
			srcDirs = [ 'src/main/java' ]
			srcDir 'src/main/orcha'
		}
		groovy {
			srcDirs = [ 'src/main/groovy' ]
			srcDir 'src/main/orcha'
		}
	}
	test {
		java {
			srcDirs = [ 'src/test/java' ]
			srcDir 'src/test/orcha'
		}
		groovy {
			srcDirs = [ 'src/test/groovy' ]
			srcDir 'src/test/orcha'
		}
		resources {
			srcDirs = ["src/test/resources"]
		}
	}
}

task compileOrcha(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	main = 'orcha.lang.Compiler'
	if(project.hasProperty("orchaFile")){
		args Eval.me(orchaFile)
	}	
}

task launchOrcha(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	main = 'orcha.lang.OrchaSpringIntegrationLauncher'
}

task generateContract(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	main = 'orcha.lang.ContractGeneration'
	if(project.hasProperty("orchaFile")){
		args Eval.me(orchaFile)
	}
}

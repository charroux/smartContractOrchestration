/*
 * change mainClass
 * gradle build
 * java -jar build/libs/ComposeTools.jar
 */

buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'jacoco'
	id 'java'
	id 'idea'
	id 'groovy'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.web3j' version '4.10.0'
}

//apply plugin: 'java'
//apply plugin: 'eclipse'
//apply plugin: 'idea'
//apply plugin: 'groovy'
//apply plugin: 'org.springframework.boot'


//apply plugin: 'io.spring.dependency-management'


//apply plugin: 'jacoco'



group = 'orcha.lang'
version = '0.0.1-SNAPSHOT'


repositories {
	mavenCentral()
}

sourceCompatibility = 17
targetCompatibility = 17

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'orcha.lang.OrchaSpringIntegrationLauncher'
    }
    baseName = 'orchalang'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

//springBoot {
//	mainClassName = "orcha.lang.OrchaSpringIntegrationLauncher"
//}

dependencies {

	implementation('org.springframework.boot:spring-boot-starter-actuator')

	//implementation 'org.codehaus.groovy:groovy-all:2.4.5'
	implementation 'org.codehaus.groovy:groovy-all:3.0.18'

	implementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
	
	//compile('org.springframework.boot:spring-boot-starter')

	implementation("org.springframework.boot:spring-boot-starter-web")

	implementation("org.springframework.boot:spring-boot-devtools")
	
	// for auto completion in the properties files
	implementation("org.springframework.boot:spring-boot-configuration-processor")
	
	
	/*// https://mvnrepository.com/artifact/org.mockito/mockito-core
	testCompile group: 'org.mockito', name: 'mockito-core', version: '2.8.47'
	// https://mvnrepository.com/artifact/junit/junit
	testCompile group: 'junit', name: 'junit', version: '4.12'*/

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation("org.springframework:spring-tx")
	
	//compile group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta2'
	//compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.0'
	
	
	/*compile('org.apache.logging.log4j:log4j-core:2.11.0')
	compile('org.apache.logging.log4j:log4j-slf4j-impl:2.11.0')
	compile('org.apache.logging.log4j:log4j-api:2.11.0')*/
	
	
	//compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
	//compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
	//compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: '2.11.0'
	
	// Redis
	implementation 'org.apache.commons:commons-pool2:2.11.1'
	implementation 'redis.clients:jedis:4.4.3'
	//implementation group: 'org.apache.commons', name: 'commons-pool2', version: '2.5.0'
	//implementation group: 'redis.clients', name: 'jedis', version: '2.9.0'


	implementation 'org.hibernate:hibernate-validator:8.0.1.Final'
	//implementation group: 'org.hibernate', name: 'hibernate-validator', version: '5.4.0.Final'

	implementation group: 'com.sun.codemodel', name: 'codemodel', version: '2.6'

	implementation 'org.springframework.integration:spring-integration-file:5.0.6.RELEASE'
	implementation 'org.springframework.integration:spring-integration-stream:5.0.6.RELEASE'
	implementation 'org.springframework.integration:spring-integration-amqp:5.0.6.RELEASE'
	/*compile 'org.springframework.integration:spring-integration-core:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-mail:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-file:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-stream:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-http:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-jdbc:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-event:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-scripting:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-amqp:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-mongodb:5.0.6.RELEASE'
	compile 'org.springframework.integration:spring-integration-redis:5.0.6.RELEASE'*/
	//compile 'org.springframework.data:spring-data-redis:2.0.5.RELEASE'

	implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit:2.0.1.RELEASE'
	
	//compile 'org.springframework.cloud:spring-cloud-starter-stream-kafka:2.0.1.RELEASE'

	implementation 'org.jdom:jdom2:2.0.6.1'
	implementation 'jaxen:jaxen:2.0.0'

	//implementation group: 'org.jdom', name: 'jdom2', version: '2.0.6'
	//implementation group: 'jaxen', name: 'jaxen', version: '1.1.6'
	// ------------
	implementation group: 'org.ow2.asm', name: 'asm', version: '5.2'
	// ------------
	implementation group: 'org.mongodb', name: 'mongo-java-driver', version: '3.4.1'
	//implementation 'org.mongodb:mongo-java-driver:3.12.14'


	//compile 'org.springframework.amqp:spring-rabbit:1.5.3.RELEASE'

	//implementation 'org.springframework.batch:spring-batch-core:3.0.7.RELEASE'
	implementation 'org.springframework.batch:spring-batch-core:5.0.2'


	//implementation 'com.h2database:h2:1.3.175'
	testImplementation 'com.h2database:h2:2.2.220'


	//implementation group: 'aspectj', name: 'aspectjweaver', version: '1.5.4'
	runtimeOnly 'org.aspectj:aspectjweaver:1.9.19'


	//implementation 'javax.mail:javax.mail-api:1.5.5'
	implementation 'javax.mail:javax.mail-api:1.6.2'

	implementation 'com.sun.mail:javax.mail:1.6.2'
	//implementation 'com.sun.mail:javax.mail:1.5.5'
	
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-stream
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-stream', version: '2.0.1.RELEASE'
	// testCompile group: 'org.springframework.cloud', name: 'spring-cloud-stream-test-support', version: '2.0.1.RELEASE'
	
	// https://mvnrepository.com/artifact/io.projectreactor/reactor-core
	//implementation group: 'io.projectreactor', name: 'reactor-core', version: '3.1.8.RELEASE'
	implementation 'io.projectreactor:reactor-core:3.5.8'



}

	
compileJava.dependsOn(processResources)		// for auto completion in the properties files

/*configurations.all {
	exclude group: "ch.qos.logback", module: "logback-classic"
}*/

sourceSets {
	main {
		java {
			srcDirs = [ 'src/main/java' ]
			srcDir 'src/main/orcha'
		}
		groovy {
			srcDirs = [ 'src/main/groovy' ]
			srcDir 'src/main/orcha'
		}
	}
	test {
		java {
			srcDirs = [ 'src/test/java' ]
			srcDir 'src/test/orcha'
		}
		groovy {
			srcDirs = [ 'src/test/groovy' ]
			srcDir 'src/test/orcha'
		}
		resources {
			srcDirs = ["src/test/resources"]
		}
	}
}

task compileOrcha(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	main = 'orcha.lang.Compiler'
	if(project.hasProperty("orchaFile")){
		args Eval.me(orchaFile)
	}	
}

task launchOrcha(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	main = 'orcha.lang.OrchaSpringIntegrationLauncher'
}

task generateContract(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	main = 'orcha.lang.ContractGeneration'
	if(project.hasProperty("orchaFile")){
		args Eval.me(orchaFile)
	}
}

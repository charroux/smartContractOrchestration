<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:int="http://www.springframework.org/schema/integration" xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp" xmlns:int-event="http://www.springframework.org/schema/integration/event" xmlns:int-file="http://www.springframework.org/schema/integration/file" xmlns:int-groovy="http://www.springframework.org/schema/integration/groovy" xmlns:int-http="http://www.springframework.org/schema/integration/http" xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc" xmlns:int-mail="http://www.springframework.org/schema/integration/mail" xmlns:int-script="http://www.springframework.org/schema/integration/scripting" xmlns:int-stream="http://www.springframework.org/schema/integration/stream" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:rabbit="http://www.springframework.org/schema/rabbit" xmlns:stream="http://www.springframework.org/schema/integration/stream" xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.3.xsd http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail-4.3.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-4.3.xsd http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream-4.3.xsd http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-4.3.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-4.3.xsd http://www.springframework.org/schema/integration/groovy http://www.springframework.org/schema/integration/groovy/spring-integration-groovy-4.3.xsd http://www.springframework.org/schema/integration/scripting http://www.springframework.org/schema/integration/scripting/spring-integration-scripting-4.3.xsd http://www.springframework.org/schema/integration/event http://www.springframework.org/schema/integration/event/spring-integration-event-4.3.xsd http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp-4.3.xsd http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream-4.3.xsd">
  <int:logging-channel-adapter id="loggingChannel" level="INFO" />
  <stream:stderr-channel-adapter channel="errorChannel" append-newline="true" />
  <bean id="errorUnwrapper" class="orcha.lang.compiler.referenceimpl.xmlgenerator.impl.ErrorUnwrapper" />
  <int:channel id="recoveryChannel" />
  <int:transformer input-channel="recoveryChannel" output-channel="loggingChannel" expression="'Failure after many attemps for the message :' + payload.failedMessage.payload" />
  <int-file:inbound-channel-adapter id="file-customer-InputChannel-id" directory="data/input" channel="customer-InputChannel" prevent-duplicates="true" filename-pattern="orderToPrepare.json">
    <int:poller fixed-delay="1000" />
  </int-file:inbound-channel-adapter>
  <int-file:file-to-string-transformer input-channel="customer-InputChannel" output-channel="customer-InputChannelTransformer" delete-files="false" />
  <int:chain input-channel="customer-InputChannelTransformer" output-channel="customer-OutputChannel">
    <int:json-to-object-transformer type="service.prepareOrder.Order" />
    <int:header-enricher>
      <int:header name="messageID" expression="headers['id'].toString()" />
    </int:header-enricher>
    <int:filter expression="payload.product.specification == 'TV'" />
  </int:chain>
  <int:chain input-channel="customer-OutputChannel" output-channel="prepareOrderServiceAcivatorOutput" id="service-activator-chain-prepareOrderChannel-id">
    <int:service-activator id="service-activator-prepareOrderChannel-id" expression="@orderPreparation.prepare(payload)">
      <int:request-handler-advice-chain>
        <bean class="org.springframework.integration.handler.advice.RequestHandlerCircuitBreakerAdvice">
          <property name="threshold" value="2" />
          <property name="halfOpenAfter" value="2000" />
        </bean>
        <int:retry-advice max-attempts="3" recovery-channel="recoveryChannel">
          <int:exponential-back-off initial="5000" multiplier="2" maximum="20000" />
        </int:retry-advice>
      </int:request-handler-advice-chain>
    </int:service-activator>
  </int:chain>
  <int:transformer id="transformer-prepareOrderServiceAcivatorOutput-id" input-channel="prepareOrderServiceAcivatorOutput" output-channel="prepareOrderAggregatorInput" method="transform">
    <bean class="orcha.lang.compiler.referenceimpl.xmlgenerator.impl.ObjectToApplicationTransformer">
      <property name="application" ref="prepareOrder" />
    </bean>
  </int:transformer>
  <int:aggregator id="aggregator-prepareOrderAggregatorInput-id" input-channel="prepareOrderAggregatorInput" output-channel="prepareOrderAggregatorInputTransformer" release-strategy-expression="size()==1 and ( ([0].payload instanceof T(orcha.lang.configuration.Application) AND [0].payload.state==T(orcha.lang.configuration.State).TERMINATED)  and  [0].payload.output.value.delay&gt;10 )" correlation-strategy-expression="headers['messageID']" />
  <int:transformer id="transformer-prepareOrderAggregatorInput-id" input-channel="prepareOrderAggregatorInputTransformer" output-channel="prepareOrderAggregatorInputAggregatorOutput" expression="payload.?[name=='prepareOrder']" />
  <int:transformer id="transformer-prepareOrderAggregatorInputAggregatorOutput-id" input-channel="prepareOrderAggregatorInputAggregatorOutput" output-channel="prepareOrderAggregatorOutputTransformer" method="transform">
    <bean class="orcha.lang.compiler.referenceimpl.xmlgenerator.impl.ApplicationToObjectTransformer" />
  </int:transformer>
  <int:chain input-channel="prepareOrderAggregatorOutputTransformer" output-channel="prepareOrderOutputFileChannelAdapterdelivery">
    <int:object-to-json-transformer />
  </int:chain>
  <int:channel id="prepareOrderOutputFileChannelAdapterdelivery" />
  <int-file:outbound-channel-adapter id="file-prepareOrderdeliveryChannel-id" channel="prepareOrderOutputFileChannelAdapterdelivery" directory-expression="@delivery.output.adapter.directory" filename-generator-expression="@delivery.output.adapter.filename" append-new-line="true" mode="REPLACE" auto-create-directory="true" delete-source-files="false" />
</beans>

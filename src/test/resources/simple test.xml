<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:stream="http://www.springframework.org/schema/integration/stream" xmlns:int="http://www.springframework.org/schema/integration" xmlns:int-mail="http://www.springframework.org/schema/integration/mail" xmlns:util="http://www.springframework.org/schema/util" xmlns:int-file="http://www.springframework.org/schema/integration/file" xmlns:int-stream="http://www.springframework.org/schema/integration/stream" xmlns:int-http="http://www.springframework.org/schema/integration/http" xmlns:int-groovy="http://www.springframework.org/schema/integration/groovy" xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc" xmlns:int-script="http://www.springframework.org/schema/integration/scripting" xmlns:int-event="http://www.springframework.org/schema/integration/event" xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp" xmlns:rabbit="http://www.springframework.org/schema/rabbit" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.3.xsd http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail-4.3.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-4.3.xsd http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream-4.3.xsd http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-4.3.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http-4.3.xsd http://www.springframework.org/schema/integration/groovy http://www.springframework.org/schema/integration/groovy/spring-integration-groovy-4.3.xsd http://www.springframework.org/schema/integration/scripting http://www.springframework.org/schema/integration/scripting/spring-integration-scripting-4.3.xsd http://www.springframework.org/schema/integration/event http://www.springframework.org/schema/integration/event/spring-integration-event-4.3.xsd http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp-4.3.xsd http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream-4.3.xsd">
<int:logging-channel-adapter id="loggingChannel" level="INFO"/>
  <stream:stderr-channel-adapter channel="errorChannel" append-newline="true"/>
  <bean id="errorUnwrapper" class="orcha.lang.compiler.referenceimpl.xmlgenerator.impl.ErrorUnwrapper"/>
  <int:channel id="recoveryChannel"/>
  <int:transformer input-channel="recoveryChannel" output-channel="loggingChannel" expression="'Failure after many attemps for the message :' + payload.failedMessage.payload"/>
<int-file:inbound-channel-adapter id="file-simpleApplicationTestInput-InputChannel-id" directory="C:/Users/Charroux_std/Documents/projet/ExecAndShare/orcha/Orcha/input" channel="simpleApplicationTestInput-InputChannel" prevent-duplicates="true" filename-pattern="simpleApplicationTestInput.json">
    <int:poller id="poller-simpleApplicationTestInput-InputChannel-id" fixed-delay="1000"/>
  </int-file:inbound-channel-adapter>
  <int-file:file-to-string-transformer input-channel="simpleApplicationTestInput-InputChannel" output-channel="simpleApplicationTestInput-InputChannelTransformer" delete-files="false"/>
  <int:chain input-channel="simpleApplicationTestInput-InputChannelTransformer" output-channel="simpleApplicationTestInput-OutputChannel">
    <int:json-to-object-transformer type="boolean"/>
    <int:header-enricher id="header-enricher-simpleApplicationTestInput-InputChannel-id">
      <int:header name="messageID" expression="headers['id'].toString()"/>
    </int:header-enricher>
  </int:chain>
<int:chain id="service-activator-chain-simpleApplicationServiceChannel-id" input-channel="simpleApplicationTestInput-OutputChannel" output-channel="simpleApplicationServiceServiceAcivatorOutput">
    <int:service-activator id="service-activator-simpleApplicationServiceChannel-id">
      <int-script:script lang="js" location="file:src/main/orcha/service/simpleTest/simpleApplicationService.js"/>
    </int:service-activator>
  </int:chain>
  <int:transformer id="transformer-simpleApplicationServiceServiceAcivatorOutput-id" input-channel="simpleApplicationServiceServiceAcivatorOutput" output-channel="simpleApplicationServiceAggregatorInput" ref="simpleApplicationServiceTransformerBean" method="transform"/>
  <bean id="simpleApplicationServiceTransformerBean" class="orcha.lang.compiler.referenceimpl.xmlgenerator.impl.ObjectToApplicationTransformer">
    <property name="application" ref="simpleApplicationService"/>
  </bean>
<int:aggregator id="aggregator-simpleApplicationServiceAggregatorInput-id" input-channel="simpleApplicationServiceAggregatorInput" output-channel="simpleApplicationServiceAggregatorInputTransformer" correlation-strategy-expression="headers['messageID']" release-strategy-expression="size()==1 and ( ([0].payload instanceof T(orcha.lang.configuration.Application) AND [0].payload.state==T(orcha.lang.configuration.State).TERMINATED)  and  [0].payload.output.value==true )"/>
  <int:transformer id="transformer-simpleApplicationServiceAggregatorInput-id" input-channel="simpleApplicationServiceAggregatorInputTransformer" output-channel="simpleApplicationServiceAggregatorInputAggregatorOutput" expression="payload.?[name=='simpleApplicationService']"/>
  <int:transformer id="transformer-simpleApplicationServiceAggregatorInputAggregatorOutput-id" input-channel="simpleApplicationServiceAggregatorInputAggregatorOutput" output-channel="simpleApplicationServiceAggregatorOutputTransformer" ref="simpleApplicationServiceAggregatorOutputTransformerApplicationToObjectTransformerBean" method="transform"/>
  <bean id="simpleApplicationServiceAggregatorOutputTransformerApplicationToObjectTransformerBean" class="orcha.lang.compiler.referenceimpl.xmlgenerator.impl.ApplicationToObjectTransformer"/>
<int:chain input-channel="simpleApplicationServiceAggregatorOutputTransformer" output-channel="simpleApplicationServiceOutputFileChannelAdaptersimpleApplicationTestOutput">
    <int:object-to-json-transformer/>
  </int:chain>
  <int:channel id="simpleApplicationServiceOutputFileChannelAdaptersimpleApplicationTestOutput"/>
  <int-file:outbound-channel-adapter id="file-simpleApplicationServicesimpleApplicationTestOutputChannel-id" channel="simpleApplicationServiceOutputFileChannelAdaptersimpleApplicationTestOutput" directory-expression="@simpleApplicationTestOutput.output.adapter.directory" filename-generator-expression="@simpleApplicationTestOutput.output.adapter.filename" append-new-line="true" mode="REPLACE" auto-create-directory="true" delete-source-files="false"/>
</beans>


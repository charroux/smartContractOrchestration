package source.order
				
/**
 * This file is written in Orcha language.
 * It should be written by a business analyst.
 * 
 * The configuration of this program is in the folder configuration/order.
 * It should be done by an operational.
 * 
 * The related programs are in the folder service/order.
 * They should be written by a developper. 
 */

// condition acts as a filter: only product TV will be processed
// any other product will be ignored.
// The when instruction waits for program orderConverter to be terminated.
// So the comp
receive order from customer condition "order.product.specification == 'TV'"
convertOrder with order.value

when "convertOrder terminates"		
evaluateVendor1 with convertOrder.result

// The following instruction can be repeated any number of time (3 times in this program).
// So the same event order will be dispatched to any instructions following the receive instruction.
receive order from customer condition "order.product.specification == 'TV'"
evaluateVendor2 with order.value

receive order from customer condition "order.product.specification == 'TV'"
evaluateVendor3 with order.value

when "(evaluateVendor1 terminates) and (evaluateVendor2 terminates) and (evaluateVendor3 terminates)"
selectBestVendor with evaluateVendor1.result, evaluateVendor2.result, evaluateVendor3.result

when  "selectBestVendor terminates condition price>1000"
send selectBestVendor.result to outputFile
